// Generated by CoffeeScript 1.8.0
(function() {
  var SpecCtrl;

  SpecCtrl = (function() {
    var Price, Spec, async, saveSpec, _;

    function SpecCtrl() {}

    Spec = require("./../model/spec");

    Price = require("./../model/price");

    _ = require("underscore");

    async = require("async");

    saveSpec = function(spec) {
      return function(cb) {
        var s;
        if (spec._id != null) {
          return Spec.findByIdAndUpdate(spec._id, {
            $set: {
              name: spec.name,
              product: spec.product
            }
          }, function(err, res) {
            return cb(err, res);
          });
        } else {
          s = new Spec(spec);
          return s.save(function(err, res) {
            return cb(err, res);
          });
        }
      };
    };

    SpecCtrl.save = function(productId, specs, fn) {
      var idList, ids;
      idList = _.filter(specs, function(spec) {
        return spec._id != null;
      });
      ids = _.pluck(idList, "_id");
      return async.auto({
        deleteSpecs: function(cb) {
          return Spec.remove({
            product: productId,
            _id: {
              $nin: ids
            }
          }, function(err, res) {
            return cb(err, res);
          });
        },
        deletePrice: function(cb) {
          return Price.remove({
            product: productId,
            _id: {
              $nin: ids
            }
          }, function(err, res) {
            return cb(err, res);
          });
        },
        saveSpecs: [
          "deleteSpecs", "deletePrice", function(cb) {
            var funcArr, spec;
            funcArr = (function() {
              var _i, _len, _results;
              _results = [];
              for (_i = 0, _len = specs.length; _i < _len; _i++) {
                spec = specs[_i];
                spec.product = productId;
                _results.push(saveSpec(spec));
              }
              return _results;
            })();
            return async.parallel(funcArr, function(err, results) {
              return cb(err, results);
            });
          }
        ]
      }, function(err, results) {
        return fn(err, results.saveSpecs);
      });
    };

    SpecCtrl.list = function(productId, fn) {
      return Spec.find({
        product: productId
      }, function(err, results) {
        return fn(err, results);
      });
    };

    return SpecCtrl;

  })();

  module.exports = SpecCtrl;

}).call(this);

//# sourceMappingURL=specCtrl.js.map
